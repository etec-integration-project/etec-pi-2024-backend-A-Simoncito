////////////////////////////////////////////////////////////////////////////////////////////////////////
Esto tiene una conexion entre el backend y el MYSQL utilizando docker compose

Como levantarlo y como verificar si funciona:

////////////////////////////////////////////////////////////////////////////////////////////////////////
0- Clonar el repositorio "git clone" (URL_DEL_REPO)
1- En la consola (dentro del repo) poner EN ORDEN:

- 1) docker compose up -d mysqldb
- 2) docker compose up -d --build app 
- 3) docker compose down app
- 4) docker compose up --build
(Esperar un poco y vas a ver un msg que dice "Tabla 'users' creada exitosamente")

2- La base de datos extrae la hora actual utilizando una consulta (esto lo hace solo)
3- Utilizando la web podemos poner en la url "http://localhost:3000/hora" para ver la hora
3.1- en la direccion '/' tanto si hacemos un get o si usamos la web nos muestra un "hola mundo"
////////////////////////////////////////////////////////////////////////////////////////////////////////
Creacion de un Usuario usando CURL:
Yo recomiendo abrir otra terminal, NO se debe cerrar la terminal que esta ejecutando el docker
Recuerda que si abrimos una nueva terminal debemos ir a la direccion del repo CD <ubi del repo>

1- Registar al usuario (Ejemplo):

curl -X POST http://localhost:3000/users/registrar \
     -H "Content-Type: application/json" \
     -d '{"username": "usuarioNuevo", "password": "123"}'

1.1- Ademas de todo esto, dichos usuarios se agregan a la base de datos en una tabla llamada "/users"

2- Iniciar sesion del usuario (Con las mismas credenciales que lo registramos):

curl -X POST http://localhost:3000/users/login \
     -H "Content-Type: application/json" \
     -d '{"username": "usuarioNuevo", "password": "123"}'

3- Tambien podemos listar los usuarios y podemos ver que dichas contraseñas estan ocultas por medidas de seguridad
3.1 - Ademas podemos observar que si intentamos registrar dos veces al mismo usuario no nos deja
nos muestar un mensaje de erro, lo mismo si queremos logearnos con credenciales erroneas

(Si queremos listar los usuarios)

 curl -X GET http://localhost:3000/users/usuarios

////////////////////////////////////////////////////////////////////////////////////////////////////////

-Angel Simon Escudero Ibañez

 